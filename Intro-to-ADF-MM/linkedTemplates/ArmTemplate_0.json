{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Intro-to-ADF-MM"
		},
		"az_adls_introtoadfmm_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'az_adls_introtoadfmm'"
		},
		"az_sqldb_AdventureWorksLT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'az_sqldb_AdventureWorksLT'"
		},
		"az_adls_introtoadfmm_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://introtoadfall.dfs.core.windows.net/"
		},
		"az_sqldb_AdventureWorksLT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "introtoadf-mm.database.windows.net"
		},
		"az_sqldb_AdventureWorksLT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "AdventureWorksLT"
		},
		"az_sqldb_AdventureWorksLT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminuser"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/az_adls_introtoadfmm')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('az_adls_introtoadfmm_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('az_adls_introtoadfmm_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_sqldb_AdventureWorksLT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This is my sample database. ",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('az_sqldb_AdventureWorksLT_properties_typeProperties_server')]",
					"database": "[parameters('az_sqldb_AdventureWorksLT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('az_sqldb_AdventureWorksLT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('az_sqldb_AdventureWorksLT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_adls_introtoadfmm_address_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_adls_introtoadfmm",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "address.csv",
						"folderPath": "AdventureWorks",
						"fileSystem": "training"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_adls_introtoadfmm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_adls_introtoadfmm_dynamic_csv')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_adls_introtoadfmm",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string",
						"defaultValue": "placeholder"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@concat(dataset().filename, '.csv')",
							"type": "Expression"
						},
						"folderPath": "AdventureWorks",
						"fileSystem": "training"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_adls_introtoadfmm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_adls_introtoadfmm_employee')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_adls_introtoadfmm",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "Employee",
						"fileSystem": "training"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_adls_introtoadfmm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_adls_introtoadfmm_holiday_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_adls_introtoadfmm",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Holiday.snappy.parquet",
						"fileSystem": "training"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "countryOrRegion",
						"type": "UTF8"
					},
					{
						"name": "holidayName",
						"type": "UTF8"
					},
					{
						"name": "normalizeHolidayName",
						"type": "UTF8"
					},
					{
						"name": "isPaidTimeOff",
						"type": "BOOLEAN"
					},
					{
						"name": "countryRegionCode",
						"type": "UTF8"
					},
					{
						"name": "date",
						"type": "INT96"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_adls_introtoadfmm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_adls_introtoadfmm_training')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_adls_introtoadfmm",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "training"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "countryOrRegion",
						"type": "UTF8"
					},
					{
						"name": "holidayName",
						"type": "UTF8"
					},
					{
						"name": "normalizeHolidayName",
						"type": "UTF8"
					},
					{
						"name": "isPaidTimeOff",
						"type": "BOOLEAN"
					},
					{
						"name": "countryRegionCode",
						"type": "UTF8"
					},
					{
						"name": "date",
						"type": "INT96"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_adls_introtoadfmm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_sqldb_AWLT_Address')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sqldb_AdventureWorksLT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "AddressID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "AddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "StateProvince",
						"type": "nvarchar"
					},
					{
						"name": "CountryRegion",
						"type": "nvarchar"
					},
					{
						"name": "PostalCode",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "SalesLT",
					"table": "Address"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_sqldb_AdventureWorksLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_sqldb_AWLT_dynamic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sqldb_AdventureWorksLT",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string",
						"defaultValue": "placeholder"
					},
					"tablename": {
						"type": "string",
						"defaultValue": "placeholder"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_sqldb_AdventureWorksLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/az_sqldb_AWLT_holiday')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "az_sqldb_AdventureWorksLT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Holiday"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_sqldb_AdventureWorksLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Transform_SalesOrderDetail')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "az_sqldb_AdventureWorksLT",
								"type": "LinkedServiceReference"
							},
							"name": "SalesOrderDetail"
						},
						{
							"linkedService": {
								"referenceName": "az_adls_introtoadfmm",
								"type": "LinkedServiceReference"
							},
							"name": "Product"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "az_adls_introtoadfmm",
								"type": "LinkedServiceReference"
							},
							"name": "LoadProductSales"
						}
					],
					"transformations": [
						{
							"name": "SalesByProduct"
						},
						{
							"name": "ProductRank"
						},
						{
							"name": "FilterProductRank"
						},
						{
							"name": "BringProductName"
						}
					],
					"scriptLines": [
						"source(output(",
						"          SalesOrderID as integer,",
						"          SalesOrderDetailID as integer,",
						"          OrderQty as short,",
						"          ProductID as integer,",
						"          UnitPrice as decimal(19,4),",
						"          UnitPriceDiscount as decimal(19,4),",
						"          LineTotal as decimal(38,6),",
						"          rowguid as string,",
						"          ModifiedDate as timestamp",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'table',",
						"     store: 'sqlserver',",
						"     schemaName: 'SalesLT',",
						"     tableName: 'SalesOrderDetail',",
						"     isolationLevel: 'READ_UNCOMMITTED') ~> SalesOrderDetail",
						"source(output(",
						"          ProductID as short,",
						"          Name as string,",
						"          ProductNumber as string,",
						"          Color as string,",
						"          StandardCost as double,",
						"          ListPrice as double,",
						"          Size as string,",
						"          Weight as double,",
						"          ProductCategoryID as short,",
						"          ProductModelID as short,",
						"          SellStartDate as string,",
						"          SellEndDate as string,",
						"          DiscontinuedDate as string,",
						"          ThumbNailPhoto as string,",
						"          ThumbnailPhotoFileName as string,",
						"          rowguid as string,",
						"          ModifiedDate as string",
						"     ),",
						"     useSchema: false,",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'delimited',",
						"     fileSystem: 'training',",
						"     folderPath: 'AdventureWorks',",
						"     fileName: 'product.csv',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true) ~> Product",
						"SalesOrderDetail aggregate(groupBy(ProductID),",
						"     SalesByProduct = sum(LineTotal),",
						"          TotalProducts = count(SalesOrderID)) ~> SalesByProduct",
						"SalesByProduct rank(desc(SalesByProduct, true),",
						"     output(ProductRank as long)) ~> ProductRank",
						"ProductRank filter(lesserOrEqual(ProductRank, 10)) ~> FilterProductRank",
						"FilterProductRank, Product join(SalesByProduct@ProductID == Product@ProductID,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> BringProductName",
						"BringProductName sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     fileSystem: 'training',",
						"     folderPath: 'AdventureWorks',",
						"     compressionCodec: 'snappy',",
						"     partitionFileNames:['productrank.snappy.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          ProductRank,",
						"          Name,",
						"          SalesByProduct,",
						"          TotalProducts",
						"     ),",
						"     partitionBy('hash', 1)) ~> LoadProductSales"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/az_sqldb_AdventureWorksLT')]",
				"[concat(variables('factoryId'), '/linkedServices/az_adls_introtoadfmm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_bd8')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_bd8",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "SalesLT.Address"
							},
							{
								"name": "Destination",
								"value": "training/AdventureWorks/address.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "az_sqldb_AWLT_Address",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "az_adls_introtoadfmm_address_csv",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "CopyData"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/az_sqldb_AWLT_Address')]",
				"[concat(variables('factoryId'), '/datasets/az_adls_introtoadfmm_address_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_From_ADLS_To_SQLDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "az_adls_introtoadfmm_holiday_parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "az_sqldb_AWLT_holiday",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "CopyData"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/az_adls_introtoadfmm_holiday_parquet')]",
				"[concat(variables('factoryId'), '/datasets/az_sqldb_AWLT_holiday')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_From_DB_To_ADLS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data from sql db to data lake",
						"description": "Taking a table from my Azure SQL DB and moving it to the AWLT folder on my data lake. ",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "az_sqldb_AWLT_dynamic",
								"type": "DatasetReference",
								"parameters": {
									"schema": {
										"value": "@pipeline().parameters.schema",
										"type": "Expression"
									},
									"tablename": {
										"value": "@pipeline().parameters.tablename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "az_adls_introtoadfmm_dynamic_csv",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "@pipeline().parameters.tablename",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"schema": {
						"type": "string"
					},
					"tablename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "CopyData"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/az_sqldb_AWLT_dynamic')]",
				"[concat(variables('factoryId'), '/datasets/az_adls_introtoadfmm_dynamic_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ForEach_Filter_Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get List of Files",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "az_adls_introtoadfmm_employee",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter List of Files",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get List of Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get List of Files').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name, 'inputEmp')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter List of Files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter List of Files').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[usp_InsertFileInformation]",
										"storedProcedureParameters": {
											"FileName": {
												"value": {
													"value": "@item().name",
													"type": "Expression"
												},
												"type": "String"
											},
											"ModifiedDate": {
												"value": {
													"value": "@utcNow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"RecordInsertDate": {
												"value": {
													"value": "@convertFromUtc(utcNow(), 'Central Standard Time' )",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "az_sqldb_AdventureWorksLT",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/az_adls_introtoadfmm_employee')]",
				"[concat(variables('factoryId'), '/linkedServices/az_sqldb_AdventureWorksLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetMetadata_From_Data_Lake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "az_adls_introtoadfmm_address_csv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"itemName",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_InsertLastModifiedDate]",
							"storedProcedureParameters": {
								"FileName": {
									"value": {
										"value": "@activity('Get Metadata1').output.itemName",
										"type": "Expression"
									},
									"type": "String"
								},
								"ModifiedDate": {
									"value": {
										"value": "@activity('Get Metadata1').output.lastModified",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"RecordInsertDate": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "az_sqldb_AdventureWorksLT",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "GetMetadata"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/az_adls_introtoadfmm_address_csv')]",
				"[concat(variables('factoryId'), '/linkedServices/az_sqldb_AdventureWorksLT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetMetadata_From_Folder')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "az_adls_introtoadfmm_training",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "ParquetReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "GetMetadata"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/az_adls_introtoadfmm_training')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IF_Condition_Activity_Lookup_GetMetadata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Last Modified Date",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "az_adls_introtoadfmm_address_csv",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"itemName",
								"lastModified"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Get Last Execution Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[usp_LastLoadDate]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "az_sqldb_AWLT_Address",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Last Modified Date",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Get Last Execution Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@greaterOrEquals(\n    activity('Get Last Modified Date').output.lastModified\n        , activity('Get Last Execution Date').output.firstRow.ExecutionDate)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Wait_False",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Wait_True",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/az_adls_introtoadfmm_address_csv')]",
				"[concat(variables('factoryId'), '/datasets/az_sqldb_AWLT_Address')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Run_DataFlow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Transform_SalesOrderDetail",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SalesOrderDetail": {},
									"Product": {},
									"LoadProductSales": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Transform_SalesOrderDetail')]"
			]
		}
	]
}